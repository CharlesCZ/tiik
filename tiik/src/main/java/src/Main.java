package src;

import java.io.FileReader;
import java.io.IOException;


/**
 * Part of the task was to round up to 2 decimal places
 */
public class Main {

private static final SignService signService=new SignService();

    public static void main(String[] args) throws IOException {
        //initiate
        String projectPath = System.getProperty("user.dir");

        // pass the path to the file as a parameter
        FileReader fr =
                new FileReader(projectPath + "\\src\\main\\resources\\test.txt");

        int quantity = signService.countChars(fr);
        System.out.println("Char quantity" + quantity + "   bits=" + quantity * 8);
        System.out.println(signService.getCharsMap());
        signService.setCharStatistics(quantity);
        //quantity of input chracters
        signService.setEntropy();
        System.out.println(signService.getEntropy());


        Huffman huffman = new Huffman();
        huffman.setHuffmanQueue(10);

        //  huffman.getQueue().add(new src.Node('X',1));
        //     huffman.getQueue().add(new src.Node('T',1));
        //    huffman.getQueue().add(new src.Node('C',1));
        //    huffman.getQueue().add(new src.Node('G',2));
//huffman.getQueue().add(new src.Node('A',5));
        huffman.insertSignsToQueue(signService.getSigns());

        Node root = huffman.getHuffmanTree();
        //  huffman.traversePreOrder(root);
        huffman.preorder(root, "");
        huffman.getCodes().forEach(System.out::println);
        System.out.println(huffman.preorderPath(root));
        fr =
                new FileReader(projectPath + "\\src\\main\\resources\\test.txt");
        System.out.println(huffman.encode(signService.getFileContent(fr)));

        fr =
                new FileReader(projectPath + "\\src\\main\\resources\\test.txt");
        System.out.println(signService.getBitsQuantity(huffman.preorderPath(root), huffman.encode(signService.getFileContent(fr))));


        //   huffman.getHuffmanTree("01[A]01[G]01[T]01[C]1[X]");
        //   System.out.println(huffman.decode("0001[C]1[T]1[G]1[A]","1000101110011011011"));



        System.out.println(huffman.decode("0000001[.]001[J]01[I]01[ź]01[Z]01[W]001[L]01[K]01[:]01[Ż]01[ć]1[!]01[U]01[ń]01[C]001[S]1[T]001[B]01[O]01[é]01[?]1[M]01[P]1[R]1[ó]1[b]1[n]01[z]1[e]00001[ę]1[p]1[w]01[m]1[k]01[o]01[d]1[r]00001[u]1[ł]1[a]001[s]1[c]1[i]01[ ]0001[t]1[j]01[,]01[ż]1[g]01[y]001[h]1[l]01[ą]1[ś]",

    }
}